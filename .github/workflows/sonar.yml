name: sonarqube
on:
  push:
    branches: main
env:
  AZURE_WEBAPP_NAME: dotnetcoresample-1
  AZURE_WEBAPP_PACKAGE_PATH: .
  PATH_TO_SOLUTION: MySampleWebApp/MySampleWebApp.sln
  PATH_TO_PROJ: MySampleWebAppTests1/MySampleWebAppTests1.csproj
  SONAR_URL: http://40.76.223.50:8080
  SONAR_ORG: NisargShah1410
  SONAR_PROJECT: sampledotnetcore
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        include-prerelease: true
    - name: Sonarqube Install
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Sonarqube Begin
      run: dotnet sonarscanner begin /d:sonar.host.url=${{ env.SONAR_URL }} /o:${{ env.SONAR_ORG }} /k:${{ env.SONAR_PROJECT }} /d:sonar.cs.vstest.reportsPaths=**/*.trx /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml /d:sonar.login=${{ secrets.SONAR_TOKEN }}
    - name: Build with dotnet
      run: dotnet build ${{ env.PATH_TO_SOLUTION }} --configuration Release
    - name: Test
      run: dotnet test ${{ env.PATH_TO_PROJ }}  /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
    - name: Sonarqube end
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        scanMetadataReportFile: .sonarqube/out/.sonar/report-task.txt
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: dotnet publish
      run: dotnet publish ${{ env.PATH_TO_SOLUTION }} -c Release -o ${{env.DOTNET_ROOT}}/myapp
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.DOTNET_WEB_APP }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
...
